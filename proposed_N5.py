import numpy as np

def proposed_N5():
    a = 0.5635
    b = 0.6247
    c = 0.4472
    d = 0.0989
    e = -0.2871

    s0 = (a - b - d + e) / 4
    s1 = (a - b + d - e) / 2
    s2 = -(a + b - d - e) / 2
    s3 = (b - d) / 2

    matrix0 = np.array([
        [ 1, 0, 1, 0, 0, 0],
        [-1, 0, 0, 1, 0, 0],
        [ 0, 1, 0, 0, 0, 0],
        [-1, 0, 0, 0, 1, 0],
        [ 1, 0, 0, 0, 0, 1],
    ])

    matrix1 = np.array([
        [1, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0],
        [0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 1, 0],
    ])

    matrix2 = np.array([
        [1, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0],
        [0, 0, 1, 0, 1, 0],
        [0, 0, 0, 1, 0, 1],
        [0, 0, 1, 0,-1, 0],
        [0, 0, 0, 1, 0,-1],

    ])

    matrix3 = np.array([
        [1, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [0, 0, 1,-1, 0, 0, 0],
        [0, 0, 0, 0, 1, 0, 1],
        [0, 0, 0, 0, 0, 1, 1],

    ])

    matrix4 = np.diag([
        c,
        c,
        0.25,
        s0,
        s1,
        s2,
        s3
    ])

    matrix5 = np.array([
        [1, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 0, 0],
        [0, 0, 1,-1, 0, 0],
        [0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 1, 1],
    ])

    matrix6 = matrix2

    matrix7 = matrix1

    matrix8 = np.array([
        [0, 0, 1, 0, 0],
        [1,-1, 1,-1, 1],
        [1, 0, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 0, 0, 1, 0],
        [0, 0, 0, 0, 1],
    ])

    result = matrix0 @ matrix1 @ matrix2 @ matrix3 @ matrix4 @ matrix5 @ matrix6 @ matrix7 @ matrix8

    return result